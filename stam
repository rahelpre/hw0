#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include "grades.h"
#include "linked-list.h"
#define FAIL 1

int main(int argc, char *argv[]) {
	
  struct grades {
	  struct student *head;
	  struct student *tail;
	  element_clone_t clone;
	  element_destroy_t destroy;
  };
	
	struct student {
		struct student *next;
		struct student *prev;
		char* name;
		int id;
		list *course_list;
	};

	struct course {
		struct course *next;
		struct course *prev;
		char* course_name;
		int grade;
	};
	
	struct grades* grades_init(){
		struct grades *student_list;
		student_list = list_init();
		return student_list;
	}
	
	void grades_destroy(struct grades *grades){
		list_destroy(grades);
	}
	
	int grades_add_student(struct grades *grades, const char *name, int id){
		if (grades==NULL || find_student(grades, id)==NULL)
			return FAIL;
		struct student *student;
		student->name=(char*)malloc(strlen(name)*sizeof(char));
		strcpy(student->name, name);
		student->id=id;
		list_push_front(grades, student)
		student->course_list = list_init();
		return 0;
	}
	
	int grades_add_grade(struct grades *grades,
	                     const char *name,
	                     int id,
	                     int grade){
		
	}
	
	float grades_calc_avg(struct grades *grades, int id, char **out){
		
	}
	
	int grades_print_student(struct grades *grades, int id){
		struct iterator* student_i =find_student (grades,id);
		if(student_i==NULL){
			return 1;
		}
		printf("%s %d:", student_i->name, student_i->id );
		struct iterator* student_grades =list_begin(student_i);
		if(student_grades==NULL){
					return 1;
				}
		while(student_grades){
		printf("%s %d,", student_grades->course_name, student_grades->grade);

		}
		return 0;
	}
	
	int grades_print_all(struct grades *grades){
		
	}
	
	struct iterator* find_student (struct grades *grades, int id){
		struct iterator i=grades->head;
		while (i!=NULL && i!=id){
			struct iterator* list_next(i);
		}
		if (i==NULL){
			return NULL;
		}
		return i;
	}
    return 0;
}
